{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0627\\u0633\\u0631\\u0627\\u0621\\\\Documents\\\\work\\\\my-project\\\\my-project\\\\src\\\\Components\\\\Autocomplete.js\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { DataGrid } from '@material-ui/data-grid';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = [\"Fac\"];\nconst columns = [{\n  field: 'id',\n  headerName: 'ID',\n  width: 120\n}, {\n  field: 'description',\n  headerName: 'Description',\n  width: 300,\n  editable: false\n}, {\n  field: 'displaySymbol',\n  headerName: 'Display Symbol',\n  width: 300,\n  editable: false\n}, {\n  field: 'symbol',\n  headerName: 'Symbol',\n  width: 300,\n  editable: false\n}, {\n  field: 'type',\n  headerName: 'Type',\n  sortable: false,\n  width: 300\n}];\nlet loading = true;\n\nclass ControllableStates extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: this.props.match.params.symbol,\n      inputValue: this.props.match.params.symbol,\n      rows: []\n    };\n  }\n\n  fetchData(x) {\n    //alert(this.props.match.params.symbol);\n    axios.get(`https://finnhub.io/api/v1/search?q=${x}&token=c3ldsgaad3if71c77vtg`).then(resp => {\n      console.warn(resp.data.result[0]);\n      let data = [];\n\n      for (var i = 0; i < resp.data.count; i++) {\n        data.push({\n          'id': i,\n          'description': resp.data.result[i].description,\n          'displaySymbol': resp.data.result[i].displaySymbol,\n          'symbol': resp.data.result[i].symbol,\n          'type': resp.data.result[i].type\n        });\n      }\n\n      console.warn(data);\n      this.setState({\n        rows: data\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Autocomplete, {\n        value: this.state.value,\n        onChange: (event, newValue) => {\n          this.setState({\n            value: newValue\n          }, () => {\n            //loading: this.state.value !== null ? true : false\n            this.props.history.push(`/stock/${this.state.value}`);\n            this.fetchData(this.state.value);\n            alert(this.state.value);\n          });\n        },\n        inputValue: this.state.inputValue,\n        onInputChange: (event, newInputValue) => {\n          this.setState({\n            inputValue: newInputValue\n          }, () => {\n            //loading: this.state.value !== null ? true : false\n            this.fetchData(this.state.value); //alert(this.state.value);\n          });\n        },\n        id: \"controllable-states\",\n        options: options,\n        renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n          label: \"Company\",\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 36\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: 400,\n          width: '100%'\n        },\n        children: /*#__PURE__*/_jsxDEV(DataGrid, {\n          rows: this.state.rows,\n          columns: columns,\n          pageSize: 10,\n          onRowClick: () => {\n            const win = window.open(\"/info/\" + this.props.match.params.symbol, \"_blank\");\n            win.focus();\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(ControllableStates);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["C:/Users/اسراء/Documents/work/my-project/my-project/src/Components/Autocomplete.js"],"names":["React","withRouter","TextField","Autocomplete","DataGrid","axios","options","columns","field","headerName","width","editable","sortable","loading","ControllableStates","Component","constructor","props","state","value","match","params","symbol","inputValue","rows","fetchData","x","get","then","resp","console","warn","data","result","i","count","push","description","displaySymbol","type","setState","render","event","newValue","history","alert","newInputValue","height","win","window","open","focus"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { DataGrid } from '@material-ui/data-grid';\r\nimport axios from 'axios'\r\n\r\nconst options = [\r\n  \"Fac\"\r\n];\r\n\r\nconst columns = [\r\n  { field: 'id', headerName: 'ID', width: 120 },\r\n  {\r\n    field: 'description',\r\n    headerName: 'Description',\r\n    width: 300,\r\n    editable: false,\r\n  },\r\n  {\r\n    field: 'displaySymbol',\r\n    headerName: 'Display Symbol',\r\n    width: 300,\r\n    editable: false,\r\n  },\r\n  {\r\n    field: 'symbol',\r\n    headerName: 'Symbol',\r\n    width: 300,\r\n    editable: false,\r\n  },\r\n  {\r\n    field: 'type',\r\n    headerName: 'Type',\r\n    sortable: false,\r\n    width: 300,\r\n  },\r\n];\r\n\r\nlet loading = true;\r\n\r\nclass ControllableStates extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        value: this.props.match.params.symbol,\r\n        inputValue:this.props.match.params.symbol,\r\n        rows: []\r\n    };\r\n  }\r\n\r\n  fetchData(x){\r\n    //alert(this.props.match.params.symbol);\r\n      axios.get(`https://finnhub.io/api/v1/search?q=${x}&token=c3ldsgaad3if71c77vtg`)\r\n          .then((resp) => {\r\n            console.warn(resp.data.result[0])\r\n              let data = [];\r\n              for (var i = 0; i < resp.data.count; i++) {\r\n                data.push({\r\n                  'id': i, \r\n                  'description': resp.data.result[i].description, \r\n                  'displaySymbol': resp.data.result[i].displaySymbol,\r\n                  'symbol': resp.data.result[i].symbol,\r\n                  'type': resp.data.result[i].type\r\n                });\r\n              } \r\n              console.warn(data);\r\n              this.setState({ \r\n                  rows: data\r\n              });\r\n          })\r\n    }\r\n  render(){\r\n    return (\r\n      <div>\r\n        <Autocomplete\r\n          value={this.state.value}\r\n          onChange={(event, newValue) => {\r\n            this.setState({ \r\n              value: newValue \r\n            }, () => {\r\n              //loading: this.state.value !== null ? true : false\r\n              this.props.history.push(`/stock/${this.state.value}`);\r\n              this.fetchData(this.state.value);\r\n              alert(this.state.value);\r\n            });\r\n          }}\r\n          inputValue={this.state.inputValue}\r\n          onInputChange={(event, newInputValue) => {\r\n            this.setState({ \r\n              inputValue: newInputValue \r\n            }, () => {\r\n              //loading: this.state.value !== null ? true : false\r\n              this.fetchData(this.state.value);\r\n              //alert(this.state.value);\r\n            });\r\n          }}\r\n          id=\"controllable-states\"\r\n          options={options}\r\n          renderInput={(params) => <TextField {...params} label=\"Company\" variant=\"outlined\" />}\r\n        />\r\n        <br />\r\n        <div style={{ height: 400, width: '100%' }}>\r\n            <DataGrid\r\n              rows={this.state.rows}\r\n              columns={columns}\r\n              pageSize={10}\r\n              onRowClick={() => {\r\n                const win = window.open(\"/info/\"+this.props.match.params.symbol, \"_blank\");\r\n                win.focus();\r\n              }}\r\n            />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(ControllableStates);\r\n"]},"metadata":{},"sourceType":"module"}